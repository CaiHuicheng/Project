1.控制结构
	控制指令执行顺序,条件/循环
	
2.if结构
	if 命令
	then
		一堆命令
	fi
	
	"命令"执行,如果返回状态($?)为0,表示真,从而执行"一堆命令"
	
3.文本文件在windows和linux中换行符不一样
	window=回车+换行
	linux=换行
	可以利用notepad++,sublime,UltraEdit...进行转换

4.if结构
	if 命令;then
		一堆命令
	fi
	
echo "1"
if pwd
then
	echo $?
	echo "OK"
fi

echo "2"
if pwdd 2>/dev/null
then
	echo $?
	echo "OK"
fi

echo "3"
if pwd;then
	echo $?
	echo "OK"
fi

	if-else格式
	if xyz ;then
		echo $?
		echo "OK"
	else
		echo $?
		echo "ERROR"
	fi

	if-elif-else格式
	if command1;then
		commands1
	elif command2;then
		commands2
	elif command3;then
		commands3
	else
		default-commands
	fi


5.条件测试
	两种格式
		test+条件测试   		test "abc" == "abc"
		[空格+条件测试+空格]	[ "abc" == "abc" ]
		
if test "abc" == "Abc" ;then
    echo $?
    echo "OK"
else
    echo $?
    echo "ERROR"
fi	


if [ "abc" == "abc" ];then
    echo $?
    echo "OK"
else
    echo $?
    echo "ERROR"
fi

	整数比较        -eq-ge -gt -le -lt  -ne
	字符串比较    = == != < > -n –z
		使用大小号需转义,否则被作为重定向符号
	文件比较        -d, -e, -f, -r, ...
	复合条件        [c1] && [c2]  ,  [c1] || [c2]

if [ -f t22.sh ];then
    echo $?
    echo "OK"
else
    echo $?
    echo "ERROR"
fi

7.两种高级特性
	高级数学表达式 		((expression))
		val1=10
		if (( $val1**2 > 100 )) ;then    
			echo $?
			echo "True"  
		else
			echo $?
			echo "False"
		fi

		((val2=$val1**2))
		echo "val2 =" $val2
		((val2++))
		echo $val2
		((++val2))
		echo $val2

	高级字符串表达式		[[expression]]
		if [[ $USER == u* ]] ;then
			echo $?
			echo "True"  
		else
			echo $?
			echo "False"
		fi


8.case
	read -p "input n:" n
	case $n in
		1|2 )
			echo "1 or 2";;
		3)
			echo "3";;
		*)
			echo "other number";;
	esac

9.while
	n=1
	while ((n < 5)); do
		echo $n
		(( n++ ))
		sleep 1
	done
	
10.until
	n=1
	s=0
	until (( n > 10)); do
		(( s+=n++ ))
	done
	echo $s

11.for

	s=0
	for (( i = 0; i <= 100; i++ )); do
		((s+=i))
	done
	echo $s

	for i in a b c d e f g; do
		echo $i
	done

	for i in `ls`;do
		echo $i
	done



作业
t1.sh	成绩分类 
	接收用户命令行输入的成绩,打印相应级别
	>=90  优, >=80  良, >=70 中, >=60 及格, <60 不及格
t2.sh	登陆测试
	提示用户输入用户名及密码
	密码输入时要求隐藏
	验证用户名是否gavin密码是否123
	成功显示“OK“,失败给出具体错误提示
t3.sh	求和
	计算1…100求偶数和

		