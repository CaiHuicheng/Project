1.作业解析
t1.sh	成绩分类
	接收用户命令行输入的成绩,打印相应级别
	>=90  优, >=80  良, >=70 中, >=60 及格, <60 不及格
t2.sh	登陆测试
	提示用户输入用户名及密码
	密码输入时要求隐藏
	验证用户名是否gavin密码是否123
	成功显示“OK“,失败给出具体错误提示
t3.sh	条件累加
	计算1…100求偶数和
	
t1.sh:
x=$1
if (( x >= 90));then
    echo "A"
elif (( x>=80));then
    echo "B"
elif (( x>=70));then
    echo "C"
elif ((x>=60));then
    echo "D"
else
    echo "E"
fi


t2.sh:
read -p "username: " name

read -s -p "password: " pwd
echo

if [[ $name == "gavin" ]] && [[ $pwd == "123" ]];then  
    echo "login OK"
elif [[ $name != "gavin" ]];then
    echo "username error"
else
    echo "password error"
fi


t3.sh
#!/bin/bash

sum=0
for (( i=0;i<=100;i++));do
	if ((i%2==0));then
		((sum+=i))
	fi
done
echo sum= $sum


2.break continue exit
#!/bin/bash

sum=0
for (( i = 0; i < 10; i++ )); do
    if (( sum > 10 ));then
        break
    elif (( i%2 == 0 ));then
        continue
    else
        ((sum+=i))
    fi
done
echo $sum
exit 10


3.函数
	定义  
		[function] funcname(){
		}
	调用	
		先定义后使用
		通过函数名使用
		传参无需括号,用位置参数
		echo 返回结果
		return/exit 返回状态  

#!/bin/bash

if (( $# != 2)); then
    echo "Useage:$0 n m"
    exit 1
fi

function doit(){
  begin=$1
  end=$2
  s=0
  while (( $begin <= $end)); do
    ((s+=begin))
    ((begin++))
  done
  echo $s
  return 101    
}

sum=$(doit $1 $2)
echo $?
echo $sum !!!


4.综合练习	用户管理
	命令菜单
		1.查看系统所有注册用户名
		2.创建新用户
			列表文件格式  username  uid	其中uid为初始密码
			zhangsan	123
			lisi       	234
			wangwu		345
		3.删除指定用户
		4.退出

for(;;){
	show_menu();
	swith(n):
	case 1:
		show_user() 
		/etc/password awk
	case 2:
		crea_user() 
		文件读取
			cat users.txt|while read p1 p2; do
				echo $p1 , $p2
			done
		useradd 一条命令创建用户并设置好密码,
			sudo useradd $uname -p $(openssl passwd -1 $pwd)
	case 3:
		delt_user()
		read -p "delete username: " uname
		userdel -r $uname
	case 4:
		exit 
}


user_manager.sh

#!/bin/bash
# format of users.txt:
#zhangsan    123
#lisi        234
#wangwu      345

choice=""
inputfile=""
function menu {
  clear
  message="\n
  \t  ===User Control===  \n
                                              \n
  \t  1|l) list User                \n
  \t  2|c) create User         \n
  \t  3|d) delete User        \n
  \t  4|q) quit                      \n
  \t  ==================\n"
  echo -e $message
  read -p "choice :" -n 1 choice
}

function checkfile(){
  echo -en "\n\n\tinput file: "
  read inputfile
  if [ -z $inputfile ] || [ ! -f $inputfile ]; then
    echo -e "\tfile no exist!\n\n\tpress any key to continue"
    read -n 1
    return 1
  fi
  return 0
}

function createusers(){
  cat $1|while read name pwd; do
    echo $name $pwd
    useradd -p $(openssl passwd -1 $pwd) -c $name $name
    if (( $? != 0 ));then
      echo "create user error"
      exit 1
    fi
    printf "."
  done
}

function deleteusers(){
  cat $1|while read uid useless; do
    userdel -r $uid
    if (( $? != 0 ));then
      echo "delete user error"
      exit 1
    fi
    printf "."
  done
}


for (( ;; )); do
  menu
  case $choice in
    1|l)
      echo
      awk -F ':' '{print $1 }' /etc/passwd;;
    2|c)
      checkfile
      if (( $?== 1));then
        continue
      fi
      createusers $inputfile
      ;;
    3|d)
      checkfile
      if (( $?== 1));then
        continue
      fi
      deleteusers $inputfile
      ;;
    4|q)
      echo -e "\nbye..."
      break;;
    *)
      echo -e "\t\033[41;33minvalid choice\033[0m"
  esac
  echo -en "\n\n\t\tpress any key to continue"
  read -n 1
done

users.txt
zhangsan    123
lisi        234
wangwu      345






